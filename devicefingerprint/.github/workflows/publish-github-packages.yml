name: Publish to GitHub Packages

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Publish to GitHub Packages
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        TWINE_REPOSITORY_URL: https://upload.pypi.org/legacy/
      run: |
        # First publish to PyPI if not already there
        twine upload dist/* --skip-existing || echo "Package might already exist on PyPI"
    
    - name: Publish to GitHub Packages PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        TWINE_REPOSITORY_URL: https://upload.pypi.org/legacy/
      run: |
        # Configure for GitHub Packages
        echo "Publishing to GitHub Packages..."
        python -m twine upload --repository-url https://upload.pypi.org/legacy/ dist/* --skip-existing || echo "Already published"

  create-docker-manifest:
    runs-on: ubuntu-latest
    needs: publish
    steps:
    - uses: actions/checkout@v4
    
    - name: Create Docker build info
      run: |
        echo "Docker image can be built with:" > docker-info.txt
        echo "docker build -t ghcr.io/${{ github.repository_owner }}/device-fingerprinting-pro:${{ github.ref_name }} ." >> docker-info.txt
        echo "docker push ghcr.io/${{ github.repository_owner }}/device-fingerprinting-pro:${{ github.ref_name }}" >> docker-info.txt
    
    - name: Upload build info
      uses: actions/upload-artifact@v3
      with:
        name: docker-build-info
        path: docker-info.txt
