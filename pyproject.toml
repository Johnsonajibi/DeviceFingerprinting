[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "quantumvault-password-manager"
dynamic = ["version"]
description = "Post-quantum cryptography enhanced password manager with advanced security features"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "QuantumVault Development Team", email = "support@quantumvault.dev"}
]
maintainers = [
    {name = "QuantumVault Development Team", email = "support@quantumvault.dev"}
]
keywords = [
    "password", "manager", "security", "cryptography", 
    "quantum-resistant", "post-quantum", "encryption",
    "AES", "SHA3", "PBKDF2", "QR-codes", "steganography",
    "forward-secrecy", "authentication", "vault"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Developers", 
    "Intended Audience :: System Administrators",
    "Topic :: Security :: Cryptography",
    "Topic :: Security",
    "Topic :: Office/Business",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Natural Language :: English",
]
requires-python = ">=3.8"
dependencies = [
    "cryptography>=41.0.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
full = [
    "pandas>=2.0.0",
    "qrcode[pil]>=7.4.0", 
    "Pillow>=10.0.0",
    "matplotlib>=3.7.0",
    "numpy>=1.24.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
security = [
    "bandit>=1.7.0",
    "safety>=3.0.0",
    "semgrep>=1.45.0",
]

[project.urls]
Homepage = "https://github.com/Johnsonajibi/Post_Quantum_Offline_Manager"
Repository = "https://github.com/Johnsonajibi/Post_Quantum_Offline_Manager"
Documentation = "https://github.com/Johnsonajibi/Post_Quantum_Offline_Manager/wiki"
Changelog = "https://github.com/Johnsonajibi/Post_Quantum_Offline_Manager/blob/master/CHANGELOG.md"
"Bug Reports" = "https://github.com/Johnsonajibi/Post_Quantum_Offline_Manager/issues"
"Security" = "https://github.com/Johnsonajibi/Post_Quantum_Offline_Manager/security"

[project.scripts]
quantumvault = "quantumvault.cli:main"
qvault = "quantumvault.cli:main"

[tool.setuptools]
packages = ["quantumvault"]

[tool.setuptools.dynamic]
version = {attr = "quantumvault.version.__version__"}

[tool.setuptools.package-data]
quantumvault = ["data/*.json", "templates/*.txt", "config/*.yaml"]

# Development tools configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["quantumvault"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "security: marks tests as security-related",
]

[tool.coverage.run]
source = ["quantumvault"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]
