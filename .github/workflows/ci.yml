name: DeviceFingerprint CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.8, 3.9, '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      shell: bash
    
    - name: Run tests
      run: |
        python -m pytest tests/ -v --cov=devicefingerprint --cov-report=xml
    
    - name: Test basic functionality
      run: |
        python -c "
        from devicefingerprint import generate_device_fingerprint, AdvancedDeviceFingerprinter, FingerprintMethod
        
        # Test basic functionality
        fp = generate_device_fingerprint()
        print(f'âœ… Basic fingerprint: {fp[:20]}...')
        
        # Test advanced functionality
        fingerprinter = AdvancedDeviceFingerprinter()
        result = fingerprinter.generate_fingerprint(FingerprintMethod.QUANTUM_RESISTANT)
        print(f'âœ… Advanced fingerprint: {result.fingerprint[:20]}... (confidence: {result.confidence})')
        
        print('ðŸŽ‰ All functionality tests passed!')
        "
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install security tools
      run: |
        pip install bandit safety
    
    - name: Run bandit security scan
      run: |
        bandit -r devicefingerprint/ -f json -o bandit-report.json || true
    
    - name: Check for known vulnerabilities
      run: |
        safety check --json --output safety-report.json || true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install linting tools
      run: |
        pip install flake8 black isort mypy
    
    - name: Run flake8
      run: |
        flake8 devicefingerprint/ --count --select=E9,F63,F7,F82 --show-source --statistics
    
    - name: Check code formatting with black
      run: |
        black --check devicefingerprint/
    
    - name: Check import sorting
      run: |
        isort --check-only devicefingerprint/
